plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven {
        name = "Curios"
        url = uri("https://maven.theillusivec4.top/")
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"
    implementation("thedarkcolour:kotlinforforge-neoforge:${rootProject.kotlin_forge_version}") {
        exclude group: "net.neoforged.fancymodloader", module: "loader"
    }

    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"

    compileOnly "dev.emi:emi-neoforge:${emi_version}:api"
    runtimeOnly "dev.emi:emi-neoforge:${emi_version}"

    implementation ("com.klikli_dev:modonomicon-${minecraft_version}-neoforge:${modonomicon_version}"){
        transitive = false
    }

    compileOnly "mcp.mobius.waila:wthit:neo-${wthitVersion}"

    runtimeOnly "top.theillusivec4.curios:curios-neoforge:${curio_version}"
    compileOnly "top.theillusivec4.curios:curios-neoforge:${curio_version}:api"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
    exclude "architectury.common.json"
}

remapJar {
    atAccessWideners.add loom.accessWidenerPath.get().asFile.name
    input.set shadowJar.archiveFile
}