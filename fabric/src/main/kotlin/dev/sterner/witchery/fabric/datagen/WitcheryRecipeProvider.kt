package dev.sterner.witchery.fabric.datagen

import dev.sterner.witchery.Witchery
import dev.sterner.witchery.fabric.datagen.recipe.*
import dev.sterner.witchery.recipe.PendantDataComponentRecipe
import dev.sterner.witchery.recipe.PotionDataComponentTransferRecipe
import dev.sterner.witchery.recipe.ShapelessRecipeWithComponentsBuilder
import dev.sterner.witchery.recipe.TaglockDataComponentTransferRecipe
import dev.sterner.witchery.registry.*
import net.fabricmc.fabric.api.datagen.v1.FabricDataOutput
import net.fabricmc.fabric.api.datagen.v1.provider.FabricRecipeProvider
import net.minecraft.core.HolderLookup
import net.minecraft.core.NonNullList
import net.minecraft.core.component.DataComponentMap
import net.minecraft.data.recipes.*
import net.minecraft.tags.ItemTags
import net.minecraft.world.item.ItemStack
import net.minecraft.world.item.Items
import net.minecraft.world.item.alchemy.PotionContents
import net.minecraft.world.item.alchemy.Potions
import net.minecraft.world.item.crafting.CraftingBookCategory
import net.minecraft.world.item.crafting.Ingredient
import java.util.UUID
import java.util.concurrent.CompletableFuture

class WitcheryRecipeProvider(output: FabricDataOutput, val registriesFuture: CompletableFuture<HolderLookup.Provider>) :
    FabricRecipeProvider(output, registriesFuture) {

    override fun buildRecipes(exporter: RecipeOutput) {

        WitcheryRitualRecipeProvider.ritual(exporter)
        WitcheryDistillingRecipeProvider.distill(exporter)
        WitcheryCauldronRecipeProvider.cauldron(exporter)
        WitcheryOvenRecipeProvider.oven(exporter)
        WitcherySpinningRecipeProvider.spin(exporter)
        WitcheryBrazierRecipeProvider.braze(exporter)

        val map = DataComponentMap.builder().set(WitcheryDataComponents.HAS_SOUP.get(), true).build()
        val list = NonNullList.create<Ingredient>()
        list.add(Ingredient.of(WitcheryItems.CHALICE.get()))
        list.add(Ingredient.of(WitcheryItems.REDSTONE_SOUP.get()))

        ShapelessRecipeWithComponentsBuilder.create(RecipeCategory.MISC, WitcheryItems.CHALICE.get(), map)
            .offerTo(exporter, Witchery.id("fill_chalice"), list)

        //start SPECIAL
        SpecialRecipeBuilder.special { _: CraftingBookCategory? ->
            TaglockDataComponentTransferRecipe()
        }.save(exporter, "taglock_transfer")

        SpecialRecipeBuilder.special { _: CraftingBookCategory? ->
            PotionDataComponentTransferRecipe()
        }.save(exporter, "potion_transfer")

        SpecialRecipeBuilder.special { _: CraftingBookCategory? ->
            PendantDataComponentRecipe()
        }.save(exporter, "pendant_crafting")
        //end SPECIAL

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.BLOOD_STAINED_HAY.get(), 5)
            .pattern("ISI")
            .pattern("III")
            .define('S', WitcheryItems.DEMONS_BLOOD.get())
            .define('I', Items.HAY_BLOCK)
            .unlockedBy("has_demon", has(WitcheryItems.DEMONS_BLOOD.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.BLOOD_CRUCIBLE.get())
            .pattern("IWI")
            .pattern("ISI")
            .pattern(" S ")
            .define('W', WitcheryItems.WINE_GLASS.get())
            .define('I', Items.IRON_INGOT)
            .define('S', Items.STONE_BRICKS)
            .unlockedBy("has_wine", has(WitcheryItems.WINE_GLASS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.WINE_GLASS.get())
            .pattern("I")
            .pattern("S")
            .define('S', Items.GLASS_BOTTLE)
            .define('I', Items.GLASS)
            .unlockedBy("has_bottle", has(Items.GLASS_BOTTLE))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.RITUAL_CHALK.get(), 2)
            .pattern("ATA")
            .pattern("AGA")
            .pattern("AGA")
            .define('A', WitcheryItems.WOOD_ASH.get())
            .define('T', WitcheryItems.TEAR_OF_THE_GODDESS.get())
            .define('G', WitcheryItems.GYPSUM.get())
            .unlockedBy("has_wood_ash", has(WitcheryItems.WOOD_ASH.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.DREAM_WEAVER.get())
            .pattern(" P ")
            .pattern("TIT")
            .pattern("T T")
            .define('P', WitcheryItems.PHANTOM_VAPOR.get())
            .define('T', WitcheryItems.TORMENTED_TWINE.get())
            .define('I', Items.ITEM_FRAME)
            .unlockedBy("has_twine", has(WitcheryItems.TORMENTED_TWINE.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.CLAY_JAR.get(), 4)
            .pattern(" C ")
            .pattern("CCC")
            .define('C', Items.CLAY_BALL)
            .unlockedBy("has_clay", has(Items.CLAY_BALL))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.IRON_WITCHES_OVEN.get())
            .pattern(" B ")
            .pattern("III")
            .pattern("IBI")
            .define('B', Items.IRON_BARS)
            .define('I', Items.IRON_INGOT)
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.COPPER_WITCHES_OVEN.get())
            .pattern(" T ")
            .pattern("CCC")
            .pattern("CTC")
            .define('T', Items.COPPER_TRAPDOOR)
            .define('C', Items.COPPER_INGOT)
            .unlockedBy("has_copper", has(Items.COPPER_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.IRON_WITCHES_OVEN_FUME_EXTENSION.get())
            .pattern("BLB")
            .pattern("BGB")
            .pattern("IAI")
            .define('B', Items.BUCKET)
            .define('L', Items.LAVA_BUCKET)
            .define('G', Items.GLOWSTONE)
            .define('A', Items.IRON_BARS)
            .define('I', Items.IRON_BLOCK)
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.COPPER_WITCHES_OVEN_FUME_EXTENSION.get())
            .pattern("BLB")
            .pattern("BGB")
            .pattern("IAI")
            .define('B', Items.LIGHTNING_ROD)
            .define('L', Items.LAVA_BUCKET)
            .define('G', Items.GLOWSTONE)
            .define('A', Items.COPPER_TRAPDOOR)
            .define('I', Items.COPPER_BLOCK)
            .unlockedBy("has_copper", has(Items.COPPER_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.DEEPSLATE_ALTAR_BLOCK.get(), 3)
            .pattern("BWE")
            .pattern("DRD")
            .pattern("DRD")
            .define('B', WitcheryItems.BREATH_OF_THE_GODDESS.get())
            .define('E', WitcheryItems.EXHALE_OF_THE_HORNED_ONE.get())
            .define('W', Items.POTION)
            .define('D', Items.DEEPSLATE_BRICKS)
            .define('R', WitcheryTags.ROWAN_LOG_ITEMS)
            .unlockedBy("has_logs", has(WitcheryTags.ROWAN_LOG_ITEMS))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.GUIDEBOOK.get())
            .pattern(" W ")
            .pattern("IBF")
            .pattern(" C ")
            .define('W', WitcheryItems.BELLADONNA_FLOWER.get())
            .define('I', Items.INK_SAC)
            .define('B', Items.BOOK)
            .define('F', Items.FEATHER)
            .define('C', ItemTags.COALS)
            .unlockedBy("has_book", has(Items.BOOK))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.ROWAN_STAIRS.get(), 4)
            .pattern("P  ")
            .pattern("PP ")
            .pattern("PPP")
            .define('P', WitcheryItems.ROWAN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.ROWAN_SLAB.get(), 6)
            .pattern("PPP")
            .define('P', WitcheryItems.ROWAN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.ROWAN_FENCE.get(), 3)
            .pattern("PSP")
            .pattern("PSP")
            .define('P', WitcheryItems.ROWAN_PLANKS.get())
            .define('S', Items.STICK)
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.ROWAN_FENCE_GATE.get())
            .pattern("SPS")
            .pattern("SPS")
            .define('P', WitcheryItems.ROWAN_PLANKS.get())
            .define('S', Items.STICK)
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.ROWAN_PRESSURE_PLATE.get())
            .pattern("PP")
            .define('P', WitcheryItems.ROWAN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.ROWAN_DOOR.get(), 3)
            .pattern("PP")
            .pattern("PP")
            .pattern("PP")
            .define('P', WitcheryItems.ROWAN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.ROWAN_TRAPDOOR.get(), 2)
            .pattern("PPP")
            .pattern("PPP")
            .define('P', WitcheryItems.ROWAN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.ROWAN_SIGN.get(), 3)
            .pattern("PPP")
            .pattern("PPP")
            .pattern(" S ")
            .define('P', WitcheryItems.ROWAN_PLANKS.get())
            .define('S', Items.STICK)
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.ROWAN_HANGING_SIGN.get(), 6)
            .pattern("C C")
            .pattern("LLL")
            .pattern("LLL")
            .define('L', WitcheryItems.STRIPPED_ROWAN_LOG.get())
            .define('C', Items.CHAIN)
            .unlockedBy("has_logs", has(WitcheryTags.ROWAN_LOG_ITEMS))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.TRANSPORTATION, WitcheryItems.ROWAN_BOAT.get())
            .pattern("P P")
            .pattern("PPP")
            .define('P', WitcheryItems.ROWAN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.ALDER_STAIRS.get(), 4)
            .pattern("P  ")
            .pattern("PP ")
            .pattern("PPP")
            .define('P', WitcheryItems.ALDER_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.ALDER_SLAB.get(), 6)
            .pattern("PPP")
            .define('P', WitcheryItems.ALDER_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.ALDER_FENCE.get(), 3)
            .pattern("PSP")
            .pattern("PSP")
            .define('P', WitcheryItems.ALDER_PLANKS.get())
            .define('S', Items.STICK)
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.ALDER_FENCE_GATE.get())
            .pattern("SPS")
            .pattern("SPS")
            .define('P', WitcheryItems.ALDER_PLANKS.get())
            .define('S', Items.STICK)
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.ALDER_PRESSURE_PLATE.get())
            .pattern("PP")
            .define('P', WitcheryItems.ALDER_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.ALDER_DOOR.get(), 3)
            .pattern("PP")
            .pattern("PP")
            .pattern("PP")
            .define('P', WitcheryItems.ALDER_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.ALDER_TRAPDOOR.get(), 2)
            .pattern("PPP")
            .pattern("PPP")
            .define('P', WitcheryItems.ALDER_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.ALDER_SIGN.get(), 3)
            .pattern("PPP")
            .pattern("PPP")
            .pattern(" S ")
            .define('P', WitcheryItems.ALDER_PLANKS.get())
            .define('S', Items.STICK)
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.ALDER_HANGING_SIGN.get(), 6)
            .pattern("C C")
            .pattern("LLL")
            .pattern("LLL")
            .define('L', WitcheryItems.STRIPPED_ALDER_LOG.get())
            .define('C', Items.CHAIN)
            .unlockedBy("has_logs", has(WitcheryTags.ALDER_LOG_ITEMS))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.TRANSPORTATION, WitcheryItems.ALDER_BOAT.get())
            .pattern("P P")
            .pattern("PPP")
            .define('P', WitcheryItems.ALDER_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.HAWTHORN_STAIRS.get(), 4)
            .pattern("P  ")
            .pattern("PP ")
            .pattern("PPP")
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.HAWTHORN_SLAB.get(), 6)
            .pattern("PPP")
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.HAWTHORN_FENCE.get(), 3)
            .pattern("PSP")
            .pattern("PSP")
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .define('S', Items.STICK)
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.HAWTHORN_FENCE_GATE.get())
            .pattern("SPS")
            .pattern("SPS")
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .define('S', Items.STICK)
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.HAWTHORN_PRESSURE_PLATE.get())
            .pattern("PP")
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.HAWTHORN_DOOR.get(), 3)
            .pattern("PP")
            .pattern("PP")
            .pattern("PP")
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.REDSTONE, WitcheryItems.HAWTHORN_TRAPDOOR.get(), 2)
            .pattern("PPP")
            .pattern("PPP")
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.HAWTHORN_SIGN.get(), 3)
            .pattern("PPP")
            .pattern("PPP")
            .pattern(" S ")
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .define('S', Items.STICK)
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.HAWTHORN_HANGING_SIGN.get(), 6)
            .pattern("C C")
            .pattern("LLL")
            .pattern("LLL")
            .define('L', WitcheryItems.STRIPPED_HAWTHORN_LOG.get())
            .define('C', Items.CHAIN)
            .unlockedBy("has_logs", has(WitcheryTags.HAWTHORN_LOG_ITEMS))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.TRANSPORTATION, WitcheryItems.HAWTHORN_BOAT.get())
            .pattern("P P")
            .pattern("PPP")
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.WHITE_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.WHITE_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.ORANGE_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.ORANGE_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.MAGENTA_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.MAGENTA_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.LIGHT_BLUE_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.LIGHT_BLUE_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.YELLOW_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.YELLOW_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.LIME_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.LIME_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.PINK_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.PINK_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.GRAY_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.GRAY_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.LIGHT_GRAY_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.LIGHT_GRAY_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.CYAN_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.CYAN_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.PURPLE_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.PURPLE_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.BLUE_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.BLUE_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.BROWN_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.BROWN_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.GREEN_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.GREEN_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.RED_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.RED_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.BLACK_IRON_CANDELABRA.get())
            .pattern("CCC")
            .pattern("IAI")
            .pattern(" I ")
            .define('C', Items.BLACK_CANDLE)
            .define('I', Items.IRON_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.ATTUNED_STONE.get())
            .pattern("W")
            .pattern("A")
            .pattern("L")
            .define('W', WitcheryItems.WHIFF_OF_MAGIC.get())
            .define('A', Items.AMETHYST_SHARD)
            .define('L', Items.LAVA_BUCKET)
            .unlockedBy("has_amethyst", has(Items.AMETHYST_SHARD))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.TOOLS, WitcheryItems.ARTHANA.get())
            .pattern(" I ")
            .pattern("NEN")
            .pattern(" S ")
            .define('I', Items.GOLD_INGOT)
            .define('N', Items.GOLD_NUGGET)
            .define('E', Items.EMERALD)
            .define('S', Items.BONE)
            .unlockedBy("has_gold", has(Items.GOLD_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.DECORATIONS, WitcheryItems.CHALICE.get())
            .pattern("NAN")
            .pattern("NIN")
            .pattern(" I ")
            .define('I', Items.GOLD_INGOT)
            .define('N', Items.GOLD_NUGGET)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_gold", has(Items.GOLD_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.SPINNING_WHEEL.get())
            .pattern("IIW")
            .pattern("IIH")
            .pattern("PAH")
            .define('H', WitcheryItems.HAWTHORN_LOG.get())
            .define('P', WitcheryItems.HAWTHORN_PLANKS.get())
            .define('I', Items.ITEM_FRAME)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .define('W', ItemTags.WOOL)
            .unlockedBy("has_attuned", has(WitcheryItems.ATTUNED_STONE.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.POPPET.get())
            .pattern("WSW")
            .pattern("BST")
            .pattern("W W")
            .define('S', WitcheryItems.SPANISH_MOSS.get())
            .define('B', WitcheryItems.BONE_NEEDLE.get())
            .define('W', Items.HAY_BLOCK)
            .define('T', Items.STRING)
            .unlockedBy("has_moss", has(WitcheryItems.SPANISH_MOSS.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.DEATH_PROTECTION_POPPET.get())
            .pattern("DGP")
            .pattern("GCG")
            .pattern(" G ")
            .define('D', WitcheryItems.DROP_OF_LUCK.get())
            .define('P', WitcheryItems.PHANTOM_VAPOR.get())
            .define('C', WitcheryItems.POPPET.get())
            .define('G', Items.GOLD_NUGGET)
            .unlockedBy("has_poppet", has(WitcheryItems.POPPET.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.VOODOO_POPPET.get())
            .pattern(" F ")
            .pattern("BPM")
            .pattern(" E ")
            .define('F', Items.FERMENTED_SPIDER_EYE)
            .define('M', WitcheryItems.MANDRAKE_ROOT.get())
            .define('P', WitcheryItems.POPPET.get())
            .define('E', WitcheryItems.EXHALE_OF_THE_HORNED_ONE.get())
            .define('B', WitcheryItems.BELLADONNA_FLOWER.get())
            .unlockedBy("has_poppet", has(WitcheryItems.POPPET.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.ARMOR_PROTECTION_POPPET.get())
            .pattern(" F ")
            .pattern("LPL")
            .pattern(" E ")
            .define('F', WitcheryItems.REEK_OF_MISFORTUNE.get())
            .define('L', WitcheryItems.DROP_OF_LUCK.get())
            .define('P', WitcheryItems.POPPET.get())
            .define('E', WitcheryItems.PHANTOM_VAPOR.get())
            .unlockedBy("has_poppet", has(WitcheryItems.POPPET.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.HUNGER_PROTECTION_POPPET.get())
            .pattern(" F ")
            .pattern("MPM")
            .pattern(" F ")
            .define('F', Items.ROTTEN_FLESH)
            .define('M', Items.GLISTERING_MELON_SLICE)
            .define('P', WitcheryItems.POPPET.get())
            .unlockedBy("has_poppet", has(WitcheryItems.POPPET.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.VOODOO_PROTECTION_POPPET.get())
            .pattern("YSR")
            .pattern("BPM")
            .pattern("RWY")
            .define('Y', Items.DANDELION)
            .define('S', Items.RED_MUSHROOM)
            .define('R', Items.POPPY)
            .define('W', Items.BROWN_MUSHROOM)
            .define('P', WitcheryItems.POPPET.get())
            .define('B', WitcheryItems.BELLADONNA_FLOWER.get())
            .define('M', WitcheryItems.MANDRAKE_ROOT.get())
            .unlockedBy("has_poppet", has(WitcheryItems.POPPET.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.VAMPIRIC_POPPET.get())
            .pattern(" D ")
            .pattern("LPL")
            .pattern(" E ")
            .define('E', WitcheryItems.EXHALE_OF_THE_HORNED_ONE.get())
            .define('L', WitcheryItems.WOOL_OF_BAT.get())
            .define('P', WitcheryItems.POPPET.get())
            .define('D', WitcheryItems.PHANTOM_VAPOR.get())
            .unlockedBy("has_poppet", has(WitcheryItems.POPPET.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.BROOM.get())
            .pattern("L")
            .pattern("L")
            .pattern("H")
            .define('H', Items.HAY_BLOCK)
            .define('L', WitcheryItems.ALDER_LOG.get())
            .unlockedBy("has_alder", has(WitcheryItems.ALDER_LOG.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.OXFORD_BOOTS.get())
            .pattern("W W")
            .pattern("W W")
            .define('W', WitcheryItems.WOVEN_CRUOR.get())
            .unlockedBy("has_cruor", has(WitcheryItems.WOVEN_CRUOR.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.TROUSERS.get())
            .pattern("WWW")
            .pattern("W W")
            .pattern("W W")
            .define('W', WitcheryItems.WOVEN_CRUOR.get())
            .unlockedBy("has_cruor", has(WitcheryItems.WOVEN_CRUOR.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.DRESS_COAT.get())
            .pattern("W W")
            .pattern("WWW")
            .pattern("WWW")
            .define('W', WitcheryItems.WOVEN_CRUOR.get())
            .unlockedBy("has_cruor", has(WitcheryItems.WOVEN_CRUOR.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.TOP_HAT.get())
            .pattern("WWW")
            .pattern("W W")
            .define('W', WitcheryItems.WOVEN_CRUOR.get())
            .unlockedBy("has_cruor", has(WitcheryItems.WOVEN_CRUOR.get()))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.TOOLS, WitcheryItems.BONE_NEEDLE.get())
            .requires(Items.BONE)
            .requires(Items.FLINT)
            .unlockedBy("has_flint", has(Items.FLINT))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.TOOLS, WitcheryItems.WAYSTONE.get())
            .requires(WitcheryItems.BONE_NEEDLE.get())
            .requires(Items.QUARTZ)
            .unlockedBy("has_flint", has(Items.FLINT))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.ROWAN_PLANKS.get(), 4)
            .requires(WitcheryTags.ROWAN_LOG_ITEMS)
            .unlockedBy("has_logs", has(WitcheryTags.ROWAN_LOG_ITEMS))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.REDSTONE, WitcheryItems.ROWAN_BUTTON.get())
            .requires(WitcheryItems.ROWAN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.TRANSPORTATION, WitcheryItems.ROWAN_CHEST_BOAT.get())
            .requires(WitcheryItems.ROWAN_BOAT.get())
            .requires(Items.CHEST)
            .unlockedBy("has_planks", has(WitcheryItems.ROWAN_PLANKS.get()))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.ALDER_PLANKS.get(), 4)
            .requires(WitcheryTags.ALDER_LOG_ITEMS)
            .unlockedBy("has_logs", has(WitcheryTags.ALDER_LOG_ITEMS))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.REDSTONE, WitcheryItems.ALDER_BUTTON.get())
            .requires(WitcheryItems.ALDER_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.TRANSPORTATION, WitcheryItems.ALDER_CHEST_BOAT.get())
            .requires(WitcheryItems.ALDER_BOAT.get())
            .requires(Items.CHEST)
            .unlockedBy("has_planks", has(WitcheryItems.ALDER_PLANKS.get()))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.BUILDING_BLOCKS, WitcheryItems.HAWTHORN_PLANKS.get(), 4)
            .requires(WitcheryTags.HAWTHORN_LOG_ITEMS)
            .unlockedBy("has_logs", has(WitcheryTags.HAWTHORN_LOG_ITEMS))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.REDSTONE, WitcheryItems.HAWTHORN_BUTTON.get())
            .requires(WitcheryItems.HAWTHORN_PLANKS.get())
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.TRANSPORTATION, WitcheryItems.HAWTHORN_CHEST_BOAT.get())
            .requires(WitcheryItems.HAWTHORN_BOAT.get())
            .requires(Items.CHEST)
            .unlockedBy("has_planks", has(WitcheryItems.HAWTHORN_PLANKS.get()))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.DECORATIONS, WitcheryItems.IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter, WitcheryItems.IRON_CANDELABRA.id.withSuffix("_undyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.WHITE_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.WHITE_DYE)
            .group("dyed_candle")
            .unlockedBy("has_white_dye", has(Items.WHITE_DYE))
            .save(exporter, WitcheryItems.WHITE_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.ORANGE_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.ORANGE_DYE)
            .group("dyed_candle")
            .unlockedBy("has_orange_dye", has(Items.ORANGE_DYE))
            .save(exporter, WitcheryItems.ORANGE_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.MAGENTA_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.MAGENTA_DYE)
            .group("dyed_candle")
            .unlockedBy("has_magenta_dye", has(Items.MAGENTA_DYE))
            .save(exporter, WitcheryItems.MAGENTA_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.LIGHT_BLUE_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.LIGHT_BLUE_DYE)
            .group("dyed_candle")
            .unlockedBy("has_light_blue_dye", has(Items.LIGHT_BLUE_DYE))
            .save(exporter, WitcheryItems.LIGHT_BLUE_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.YELLOW_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.YELLOW_DYE)
            .group("dyed_candle")
            .unlockedBy("has_yellow_dye", has(Items.YELLOW_DYE))
            .save(exporter, WitcheryItems.YELLOW_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.LIME_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.LIME_DYE)
            .group("dyed_candle")
            .unlockedBy("has_lime_dye", has(Items.LIME_DYE))
            .save(exporter, WitcheryItems.LIME_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.PINK_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.PINK_DYE)
            .group("dyed_candle")
            .unlockedBy("has_pink_dye", has(Items.PINK_DYE))
            .save(exporter, WitcheryItems.PINK_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.GRAY_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.GRAY_DYE)
            .group("dyed_candle")
            .unlockedBy("has_gray_dye", has(Items.GRAY_DYE))
            .save(exporter, WitcheryItems.GRAY_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.LIGHT_GRAY_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.LIGHT_GRAY_DYE)
            .group("dyed_candle")
            .unlockedBy("has_light_gray_dye", has(Items.LIGHT_GRAY_DYE))
            .save(exporter, WitcheryItems.LIGHT_GRAY_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.CYAN_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.CYAN_DYE)
            .group("dyed_candle")
            .unlockedBy("has_cyan_dye", has(Items.CYAN_DYE))
            .save(exporter, WitcheryItems.CYAN_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.PURPLE_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.PURPLE_DYE)
            .group("dyed_candle")
            .unlockedBy("has_purple_dye", has(Items.PURPLE_DYE))
            .save(exporter, WitcheryItems.PURPLE_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.BLUE_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.BLUE_DYE)
            .group("dyed_candle")
            .unlockedBy("has_blue_dye", has(Items.BLUE_DYE))
            .save(exporter, WitcheryItems.BLUE_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.BROWN_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.BROWN_DYE)
            .group("dyed_candle")
            .unlockedBy("has_brown_dye", has(Items.BROWN_DYE))
            .save(exporter, WitcheryItems.BROWN_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.GREEN_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.GREEN_DYE)
            .group("dyed_candle")
            .unlockedBy("has_green_dye", has(Items.GREEN_DYE))
            .save(exporter, WitcheryItems.GREEN_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.RED_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.RED_DYE)
            .group("dyed_candle")
            .unlockedBy("has_red_dye", has(Items.RED_DYE))
            .save(exporter, WitcheryItems.RED_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.BLACK_IRON_CANDELABRA.get())
            .requires(WitcheryTags.CANDELABRA_ITEMS)
            .requires(Items.BLACK_DYE)
            .group("dyed_candle")
            .unlockedBy("has_black_dye", has(Items.BLACK_DYE))
            .save(exporter, WitcheryItems.BLACK_IRON_CANDELABRA.id.withSuffix("_dyed"))

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, Items.BONE_MEAL, 6)
            .requires(WitcheryItems.WOOD_ASH.get(), 6)
            .requires(Items.BONE, 1)
            .unlockedBy("has_wood_ash", has(WitcheryItems.WOOD_ASH.get()))
            .save(exporter, "witchery:bone_meal_6")

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, Items.BONE_MEAL, 7)
            .requires(WitcheryItems.WOOD_ASH.get(), 8)
            .requires(Items.BONE, 1)
            .unlockedBy("has_wood_ash", has(WitcheryItems.WOOD_ASH.get()))
            .save(exporter, "witchery:bone_meal_7")

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, Items.BONE_MEAL, 5)
            .requires(WitcheryItems.WOOD_ASH.get(), 4)
            .requires(Items.BONE, 1)
            .unlockedBy("has_wood_ash", has(WitcheryItems.WOOD_ASH.get()))
            .save(exporter, "witchery:bone_meal_5")

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, Items.BONE_MEAL, 4)
            .requires(WitcheryItems.WOOD_ASH.get(), 2)
            .requires(Items.BONE, 1)
            .unlockedBy("has_wood_ash", has(WitcheryItems.WOOD_ASH.get()))
            .save(exporter, "witchery:bone_meal_4")

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.ETERNAL_CATALYST.get(), 1)
            .requires(Items.QUARTZ, 2)
            .requires(WitcheryItems.SPECTRAL_DUST.get(), 1)
            .requires(Items.NETHER_STAR, 1)
            .unlockedBy("has_star", has(Items.NETHER_STAR))
            .save(exporter)

        ShapelessRecipeBuilder.shapeless(RecipeCategory.MISC, WitcheryItems.ETERNAL_CATALYST.get(), 2)
            .requires(Items.QUARTZ, 2)
            .requires(WitcheryItems.SPECTRAL_DUST.get(), 1)
            .requires(WitcheryItems.ETERNAL_CATALYST.get(), 1)
            .unlockedBy("has_star", has(WitcheryItems.ETERNAL_CATALYST.get()))
            .save(exporter, "witchery:eternal_catalyst_2")

        SimpleCookingRecipeBuilder.smelting(
            Ingredient.of(WitcheryItems.CLAY_JAR.get()),
            RecipeCategory.MISC, WitcheryItems.JAR.get(), 0.3f, 200
        )
            .unlockedBy("has_clay_jar", has(WitcheryItems.CLAY_JAR.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.CENSER.get())
            .pattern(" N ")
            .pattern("GBG")
            .pattern("G G")
            .define('B', WitcheryItems.BRAZIER.get())
            .define('N', WitcheryItems.ETERNAL_CATALYST.get())
            .define('G', Items.GOLD_INGOT)
            .unlockedBy("has_brazier", has(WitcheryItems.BRAZIER.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.CENSER_LONG.get())
            .pattern("GNG")
            .pattern("GBG")
            .define('B', WitcheryItems.BRAZIER.get())
            .define('N', WitcheryItems.ETERNAL_CATALYST.get())
            .define('G', Items.GOLD_INGOT)
            .unlockedBy("has_brazier", has(WitcheryItems.BRAZIER.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.DISTILLERY.get())
            .pattern("JIJ")
            .pattern("III")
            .pattern("GAG")
            .define('J', WitcheryItems.JAR.get())
            .define('I', Items.IRON_INGOT)
            .define('G', Items.GOLD_INGOT)
            .define('A', WitcheryItems.ATTUNED_STONE.get())
            .unlockedBy("has_attuned", has(WitcheryItems.ATTUNED_STONE.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.CAULDRON.get())
            .pattern("I I")
            .pattern("III")
            .pattern(" C ")
            .define('I', Items.IRON_INGOT)
            .define('C', Items.CAMPFIRE)
            .unlockedBy("has_iron", has(Items.IRON_INGOT))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.COPPER_CAULDRON.get())
            .pattern("I I")
            .pattern("IBI")
            .pattern(" C ")
            .define('I', Items.COPPER_INGOT)
            .define('B', Items.COPPER_BLOCK)
            .define('C', Items.CAMPFIRE)
            .unlockedBy("has_copper", has(Items.COPPER_INGOT))
            .save(exporter)


        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.WITCHES_ROBES.get())
            .pattern("I I")
            .pattern("ISI")
            .pattern("III")
            .define('I', WitcheryItems.IMPREGNATED_FABRIC.get())
            .define('S', WitcheryItems.GOLDEN_THREAD.get())
            .unlockedBy("has_impregnated", has(WitcheryItems.IMPREGNATED_FABRIC.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.WITCHES_HAT.get())
            .pattern(" I ")
            .pattern("SIS")
            .pattern("IGI")
            .define('I', WitcheryItems.IMPREGNATED_FABRIC.get())
            .define('S', WitcheryItems.GOLDEN_THREAD.get())
            .define('G', Items.GLOWSTONE_DUST)
            .unlockedBy("has_impregnated", has(WitcheryItems.IMPREGNATED_FABRIC.get()))
            .save(exporter)


        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.WITCHES_SLIPPERS.get())
            .pattern("S S")
            .pattern("I I")
            .define('I', WitcheryItems.IMPREGNATED_FABRIC.get())
            .define('S', WitcheryItems.GOLDEN_THREAD.get())
            .unlockedBy("has_impregnated", has(WitcheryItems.IMPREGNATED_FABRIC.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.BRAZIER.get())
            .pattern("INI")
            .pattern("BBB")
            .define('I', Items.IRON_BARS)
            .define('N', WitcheryItems.NECROMANTIC_STONE.get())
            .define('B', Items.IRON_INGOT)
            .unlockedBy("has_necro", has(WitcheryItems.NECROMANTIC_STONE.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.SUN_COLLECTOR.get())
            .pattern("INI")
            .pattern(" B ")
            .define('I', Items.IRON_BARS)
            .define('N', Items.DAYLIGHT_DETECTOR)
            .define('B', Items.IRON_INGOT)
            .unlockedBy("has_daylight", has(Items.DAYLIGHT_DETECTOR))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.QUARTZ_SPHERE.get())
            .pattern(" Q ")
            .pattern("Q Q")
            .pattern(" Q ")
            .define('Q', Items.QUARTZ)
            .unlockedBy("has_quartz", has(Items.QUARTZ))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.BITING_BELT.get())
            .pattern("LIM")
            .pattern("IFI")
            .pattern("I I")
            .define('I', WitcheryItems.IMPREGNATED_FABRIC.get())
            .define('F', WitcheryItems.FANCIFUL_THREAD.get())
            .define('M', WitcheryItems.MELLIFLUOUS_HUNGER.get())
            .define('L', WitcheryItems.PARASITIC_LOUSE.get())
            .unlockedBy("has_fabric", has(WitcheryItems.IMPREGNATED_FABRIC.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.BARK_BELT.get())
            .pattern("F F")
            .pattern("MBM")
            .pattern("F F")
            .define('M', WitcheryItems.ENT_TWIG.get())
            .define('F', WitcheryItems.BREW_FLOWING_SPIRIT.get())
            .define('B', WitcheryItems.BITING_BELT.get())
            .unlockedBy("has_fabric", has(WitcheryItems.BITING_BELT.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.SCARECROW.get())
            .pattern("WPW")
            .pattern("STS")
            .pattern("WHW")
            .define('T', WitcheryItems.TORMENTED_TWINE.get())
            .define('S', Items.HAY_BLOCK)
            .define('P', Items.CARVED_PUMPKIN)
            .define('H', WitcheryItems.HAWTHORN_LOG.get())
            .define('W', ItemTags.WOOL)
            .unlockedBy("has_twine", has(WitcheryItems.TORMENTED_TWINE.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.CLAY_EFFIGY.get())
            .pattern("WPW")
            .pattern(" T ")
            .pattern("WHW")
            .define('T', WitcheryItems.TORMENTED_TWINE.get())
            .define('P', Items.CARVED_PUMPKIN)
            .define('H', WitcheryItems.ROWAN_LOG.get())
            .define('W', ItemTags.TERRACOTTA)
            .unlockedBy("has_twine", has(WitcheryItems.TORMENTED_TWINE.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.CANE_SWORD.get())
            .pattern(" WG")
            .pattern("WSW")
            .pattern("BW ")
            .define('B', Items.GLASS_BOTTLE)
            .define('S', Items.DIAMOND_SWORD)
            .define('W', WitcheryItems.WOVEN_CRUOR.get())
            .define('G', Items.GOLD_INGOT)
            .unlockedBy("has_twine", has(WitcheryItems.WOVEN_CRUOR.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.DREAMWEAVER_CHARM.get())
            .pattern("SSS")
            .pattern("SFS")
            .pattern("SSS")
            .define('S', Items.STICK)
            .define('F', WitcheryItems.FANCIFUL_THREAD.get())
            .unlockedBy("has_stick", has(Items.STICK))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.WEREWOLF_ALTAR.get())
            .pattern(" S ")
            .pattern("SFS")
            .pattern("SOS")
            .define('S', Items.STONE)
            .define('F', WitcheryItems.WOLFSBANE.get())
            .define('O', WitcheryItems.TONGUE_OF_DOG.get())
            .unlockedBy("has_wolfsbane", has(WitcheryItems.WOLFSBANE.get()))
            .save(exporter)

        ShapedRecipeBuilder.shaped(RecipeCategory.MISC, WitcheryItems.COFFIN.get())
            .pattern("SSS")
            .pattern("WBW")
            .pattern("WWW")
            .define('B', ItemTags.BEDS)
            .define('W', ItemTags.LOGS)
            .define('S', ItemTags.WOODEN_SLABS)
            .unlockedBy("has_bed", has(ItemTags.BEDS))
            .save(exporter)

        SimpleCookingRecipeBuilder.smelting(
            Ingredient.of(WitcheryItems.BLOOD_STAINED_WOOL.get()),
            RecipeCategory.MISC,
            WitcheryItems.WOVEN_CRUOR.get(),
            0.35f, 200
        )
            .unlockedBy("has_blood", has(WitcheryItems.BLOOD_STAINED_WOOL.get()))
            .save(exporter, Witchery.id("woven_cruor"))
    }
}